{"title":"Spring Boot 集成 Redis 缓存并使用 FastJSON2 作为序列化器的完整配置指南","slug":"2025-6-12","date":"2025-06-11T16:00:00.000Z","updated":"2025-08-18T06:10:33.107Z","comments":true,"path":"api/articles/2025-6-12.json","excerpt":null,"covers":null,"content":"<p>在现代 Web 应用中，缓存是提升系统性能和减少数据库压力的重要手段。在最基本的SSM开发过程中，Springboot可以方便的将缓存和Redis集成，可以十分便捷的用注解开发。</p>\n<p>个人情怀让我使用fastjson。升级到fastjson2后，原本的autotype被废除，不管是官方给出的代码示例还是论坛社区，都没有对泛型数据的支持，对于特定需求使用起来很不方便。</p>\n<div class=\"note info\"><p>泛型：如果你有一个普通 Java Bean (FileEntity) ，那么List<FileEntity>, Map&lt;String, Object&gt; 等就是泛型集合</p></div>\n\n<h2 id=\"1-引入依赖\"><a href=\"#1-引入依赖\" class=\"headerlink\" title=\"1 引入依赖\"></a>1 引入依赖</h2><ul>\n<li><strong>Springboot版本采用3.2.3</strong></li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>pom.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;fastjson2&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.0.57&lt;/version&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;fastjson2-extension-spring6&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.0.57&lt;/version&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-创建自定义序列器\"><a href=\"#2-创建自定义序列器\" class=\"headerlink\" title=\"2 创建自定义序列器\"></a>2 创建自定义序列器</h2><ul>\n<li>自定义 FastJSON2 序列化器（支持泛型）</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>FastJsonRedisSerializer.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.alibaba.fastjson2.JSON;</span><br><span class=\"line\">import com.alibaba.fastjson2.JSONReader;</span><br><span class=\"line\">import com.alibaba.fastjson2.TypeReference;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.SerializationException;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.lang.reflect.Type;</span><br><span class=\"line\"></span><br><span class=\"line\">public class FastJsonRedisSerializer&lt;T&gt; implements RedisSerializer&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static final JSONReader.Filter AUTO_TYPE_FILTER = JSONReader.autoTypeFilter(</span><br><span class=\"line\">            &quot;com.example.demo.entity.&quot;, // 替换为你的实体包名</span><br><span class=\"line\">            &quot;java.util.ArrayList&quot;,</span><br><span class=\"line\">            &quot;java.util.HashMap&quot;</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    private final Type type;</span><br><span class=\"line\"></span><br><span class=\"line\">    public FastJsonRedisSerializer(Type type) &#123;</span><br><span class=\"line\">        this.type = type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public FastJsonRedisSerializer(Class&lt;T&gt; clazz) &#123;</span><br><span class=\"line\">        this.type = clazz;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public byte[] serialize(T t) throws SerializationException &#123;</span><br><span class=\"line\">        if (t == null) return new byte[0];</span><br><span class=\"line\">        return JSON.toJSONBytes(t, JSON.Feature.WriteClassName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public T deserialize(byte[] bytes) throws SerializationException &#123;</span><br><span class=\"line\">        if (bytes == null || bytes.length == 0) return null;</span><br><span class=\"line\">        return JSON.parseObject(bytes, type, AUTO_TYPE_FILTER, JSON.Feature.SupportAutoType);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>String 类型专用序列化器</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>FastJson2StringRedisSerializer.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.SerializationException;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">public class FastJson2StringRedisSerializer implements RedisSerializer&lt;String&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public byte[] serialize(String s) throws SerializationException &#123;</span><br><span class=\"line\">        return s == null ? new byte[0] : s.getBytes(StandardCharsets.UTF_8);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String deserialize(byte[] bytes) throws SerializationException &#123;</span><br><span class=\"line\">        return bytes == null || bytes.length == 0 ? null : new String(bytes, StandardCharsets.UTF_8);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-配置Config\"><a href=\"#3-配置Config\" class=\"headerlink\" title=\"3 配置Config\"></a>3 配置Config</h2><ul>\n<li>配置 RedisTemplate</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>RedisConfig.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.springframework.context.annotation.Bean;</span><br><span class=\"line\">import org.springframework.context.annotation.Configuration;</span><br><span class=\"line\">import org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class=\"line\">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class=\"line\"></span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">public class RedisConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean</span><br><span class=\"line\">    public RedisTemplate&lt;Object, Object&gt; redisTemplate(RedisConnectionFactory factory) &#123;</span><br><span class=\"line\">        RedisTemplate&lt;Object, Object&gt; template = new RedisTemplate&lt;&gt;();</span><br><span class=\"line\">        template.setConnectionFactory(factory);</span><br><span class=\"line\"></span><br><span class=\"line\">        FastJsonRedisSerializer&lt;Object&gt; valueSerializer = new FastJsonRedisSerializer&lt;&gt;(Object.class);</span><br><span class=\"line\">        FastJson2StringRedisSerializer stringSerializer = new FastJson2StringRedisSerializer();</span><br><span class=\"line\"></span><br><span class=\"line\">        template.setKeySerializer(stringSerializer);             // key: String</span><br><span class=\"line\">        template.setHashKeySerializer(stringSerializer);         // hashKey: String</span><br><span class=\"line\">        template.setValueSerializer(valueSerializer);            // value: 泛型对象</span><br><span class=\"line\">        template.setHashValueSerializer(valueSerializer);        // hashValue: 泛型对象</span><br><span class=\"line\">        template.setDefaultSerializer(valueSerializer);</span><br><span class=\"line\">        template.setStringSerializer(stringSerializer);</span><br><span class=\"line\">        template.afterPropertiesSet();</span><br><span class=\"line\"></span><br><span class=\"line\">        return template;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置 RedisCacheManager（用于 @Cacheable 等注解）</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>RedisCacheConfig.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.springframework.cache.annotation.EnableCaching;</span><br><span class=\"line\">import org.springframework.context.annotation.Bean;</span><br><span class=\"line\">import org.springframework.context.annotation.Configuration;</span><br><span class=\"line\">import org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class=\"line\">import org.springframework.data.redis.cache.RedisCacheManager;</span><br><span class=\"line\">import org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.RedisSerializationContext;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.time.Duration;</span><br><span class=\"line\"></span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">@EnableCaching</span><br><span class=\"line\">public class RedisCacheConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean</span><br><span class=\"line\">    public RedisCacheManager redisCacheManager(RedisConnectionFactory factory) &#123;</span><br><span class=\"line\">        FastJsonRedisSerializer&lt;Object&gt; serializer = new FastJsonRedisSerializer&lt;&gt;(Object.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()</span><br><span class=\"line\">                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(serializer))</span><br><span class=\"line\">                .entryTtl(Duration.ofMinutes(30)); // 设置缓存过期时间</span><br><span class=\"line\"></span><br><span class=\"line\">        return RedisCacheManager.builder(factory)</span><br><span class=\"line\">                .cacheDefaults(config)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>到此配置全部完毕</strong></p>\n<h2 id=\"4-Spring-Cache-注解详解与使用示例\"><a href=\"#4-Spring-Cache-注解详解与使用示例\" class=\"headerlink\" title=\"4 Spring Cache 注解详解与使用示例\"></a>4 Spring Cache 注解详解与使用示例</h2><h3 id=\"4-1-Cacheable\"><a href=\"#4-1-Cacheable\" class=\"headerlink\" title=\"4.1 @Cacheable\"></a>4.1 @Cacheable</h3><p><strong>用途</strong>：标记方法返回值需被缓存。若缓存存在，则直接返回；否则执行方法体并缓存结果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Cacheable(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\">FileEntity <span class=\"title function_\">getFileById</span><span class=\"params\">(UUID id)</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-CachePut\"><a href=\"#4-2-CachePut\" class=\"headerlink\" title=\"4.2 @CachePut\"></a>4.2 @CachePut</h3><p><strong>用途</strong>：更新缓存，总是执行方法并将结果写入缓存。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CachePut(value = &quot;fileCache&quot;, key = &quot;#result.id&quot;)</span></span><br><span class=\"line\">FileEntity <span class=\"title function_\">saveFile</span><span class=\"params\">(FileEntity file)</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-CacheEvict\"><a href=\"#4-3-CacheEvict\" class=\"headerlink\" title=\"4.3 @CacheEvict\"></a>4.3 @CacheEvict</h3><p><strong>用途</strong>：清除缓存中的条目。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheEvict(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">deleteFile</span><span class=\"params\">(UUID id)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>清空整个缓存区域：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheEvict(value = &quot;fileListCache&quot;, allEntries = true)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">clearAllFiles</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-CacheConfig\"><a href=\"#4-4-CacheConfig\" class=\"headerlink\" title=\"4.4 @CacheConfig\"></a>4.4 @CacheConfig</h3><p><strong>用途</strong>：类级别共享缓存配置</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheConfig(cacheNames = &quot;fileCache&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Cacheable(key = &quot;#id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> FileEntity <span class=\"title function_\">getFileById</span><span class=\"params\">(UUID id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileMapper.selectById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-5-业务层使用示例\"><a href=\"#4-5-业务层使用示例\" class=\"headerlink\" title=\"4.5 业务层使用示例\"></a>4.5 业务层使用示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> FileRepository fileRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Cacheable(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> FileEntity <span class=\"title function_\">getFileById</span><span class=\"params\">(UUID id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileRepository.selectById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@CachePut(value = &quot;fileCache&quot;, key = &quot;#result.id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> FileEntity <span class=\"title function_\">saveFile</span><span class=\"params\">(FileEntity file)</span> &#123;</span><br><span class=\"line\">        fileRepository.insert(file);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> file;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@CacheEvict(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">deleteFile</span><span class=\"params\">(UUID id)</span> &#123;</span><br><span class=\"line\">        fileRepository.deleteById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Cacheable(value = &quot;fileListCache&quot;, key = &quot;&#x27;all&#x27;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;FileEntity&gt; <span class=\"title function_\">getAllFiles</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileRepository.selectAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<p>在现代 Web 应用中，缓存是提升系统性能和减少数据库压力的重要手段。在最基本的SSM开发过程中，Springboot可以方便的将缓存和Redis集成，可以十分便捷的用注解开发。</p>\n<p>个人情怀让我使用fastjson。升级到fastjson2后，原本的autotype被废除，不管是官方给出的代码示例还是论坛社区，都没有对泛型数据的支持，对于特定需求使用起来很不方便。</p>\n<div class=\"note info\"><p>泛型：如果你有一个普通 Java Bean (FileEntity) ，那么List<FileEntity>, Map&lt;String, Object&gt; 等就是泛型集合</p></div>\n\n<h2 id=\"1-引入依赖\"><a href=\"#1-引入依赖\" class=\"headerlink\" title=\"1 引入依赖\"></a>1 引入依赖</h2><ul>\n<li><strong>Springboot版本采用3.2.3</strong></li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>pom.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;fastjson2&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.0.57&lt;/version&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;com.alibaba.fastjson2&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;fastjson2-extension-spring6&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.0.57&lt;/version&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-创建自定义序列器\"><a href=\"#2-创建自定义序列器\" class=\"headerlink\" title=\"2 创建自定义序列器\"></a>2 创建自定义序列器</h2><ul>\n<li>自定义 FastJSON2 序列化器（支持泛型）</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>FastJsonRedisSerializer.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.alibaba.fastjson2.JSON;</span><br><span class=\"line\">import com.alibaba.fastjson2.JSONReader;</span><br><span class=\"line\">import com.alibaba.fastjson2.TypeReference;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.SerializationException;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.lang.reflect.Type;</span><br><span class=\"line\"></span><br><span class=\"line\">public class FastJsonRedisSerializer&lt;T&gt; implements RedisSerializer&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static final JSONReader.Filter AUTO_TYPE_FILTER = JSONReader.autoTypeFilter(</span><br><span class=\"line\">            &quot;com.example.demo.entity.&quot;, // 替换为你的实体包名</span><br><span class=\"line\">            &quot;java.util.ArrayList&quot;,</span><br><span class=\"line\">            &quot;java.util.HashMap&quot;</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    private final Type type;</span><br><span class=\"line\"></span><br><span class=\"line\">    public FastJsonRedisSerializer(Type type) &#123;</span><br><span class=\"line\">        this.type = type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public FastJsonRedisSerializer(Class&lt;T&gt; clazz) &#123;</span><br><span class=\"line\">        this.type = clazz;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public byte[] serialize(T t) throws SerializationException &#123;</span><br><span class=\"line\">        if (t == null) return new byte[0];</span><br><span class=\"line\">        return JSON.toJSONBytes(t, JSON.Feature.WriteClassName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public T deserialize(byte[] bytes) throws SerializationException &#123;</span><br><span class=\"line\">        if (bytes == null || bytes.length == 0) return null;</span><br><span class=\"line\">        return JSON.parseObject(bytes, type, AUTO_TYPE_FILTER, JSON.Feature.SupportAutoType);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>String 类型专用序列化器</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>FastJson2StringRedisSerializer.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.SerializationException;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.nio.charset.StandardCharsets;</span><br><span class=\"line\"></span><br><span class=\"line\">public class FastJson2StringRedisSerializer implements RedisSerializer&lt;String&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public byte[] serialize(String s) throws SerializationException &#123;</span><br><span class=\"line\">        return s == null ? new byte[0] : s.getBytes(StandardCharsets.UTF_8);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String deserialize(byte[] bytes) throws SerializationException &#123;</span><br><span class=\"line\">        return bytes == null || bytes.length == 0 ? null : new String(bytes, StandardCharsets.UTF_8);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-配置Config\"><a href=\"#3-配置Config\" class=\"headerlink\" title=\"3 配置Config\"></a>3 配置Config</h2><ul>\n<li>配置 RedisTemplate</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>RedisConfig.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.springframework.context.annotation.Bean;</span><br><span class=\"line\">import org.springframework.context.annotation.Configuration;</span><br><span class=\"line\">import org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class=\"line\">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class=\"line\"></span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">public class RedisConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean</span><br><span class=\"line\">    public RedisTemplate&lt;Object, Object&gt; redisTemplate(RedisConnectionFactory factory) &#123;</span><br><span class=\"line\">        RedisTemplate&lt;Object, Object&gt; template = new RedisTemplate&lt;&gt;();</span><br><span class=\"line\">        template.setConnectionFactory(factory);</span><br><span class=\"line\"></span><br><span class=\"line\">        FastJsonRedisSerializer&lt;Object&gt; valueSerializer = new FastJsonRedisSerializer&lt;&gt;(Object.class);</span><br><span class=\"line\">        FastJson2StringRedisSerializer stringSerializer = new FastJson2StringRedisSerializer();</span><br><span class=\"line\"></span><br><span class=\"line\">        template.setKeySerializer(stringSerializer);             // key: String</span><br><span class=\"line\">        template.setHashKeySerializer(stringSerializer);         // hashKey: String</span><br><span class=\"line\">        template.setValueSerializer(valueSerializer);            // value: 泛型对象</span><br><span class=\"line\">        template.setHashValueSerializer(valueSerializer);        // hashValue: 泛型对象</span><br><span class=\"line\">        template.setDefaultSerializer(valueSerializer);</span><br><span class=\"line\">        template.setStringSerializer(stringSerializer);</span><br><span class=\"line\">        template.afterPropertiesSet();</span><br><span class=\"line\"></span><br><span class=\"line\">        return template;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置 RedisCacheManager（用于 @Cacheable 等注解）</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>RedisCacheConfig.java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.config;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.springframework.cache.annotation.EnableCaching;</span><br><span class=\"line\">import org.springframework.context.annotation.Bean;</span><br><span class=\"line\">import org.springframework.context.annotation.Configuration;</span><br><span class=\"line\">import org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class=\"line\">import org.springframework.data.redis.cache.RedisCacheManager;</span><br><span class=\"line\">import org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class=\"line\">import org.springframework.data.redis.serializer.RedisSerializationContext;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.time.Duration;</span><br><span class=\"line\"></span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">@EnableCaching</span><br><span class=\"line\">public class RedisCacheConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean</span><br><span class=\"line\">    public RedisCacheManager redisCacheManager(RedisConnectionFactory factory) &#123;</span><br><span class=\"line\">        FastJsonRedisSerializer&lt;Object&gt; serializer = new FastJsonRedisSerializer&lt;&gt;(Object.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()</span><br><span class=\"line\">                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(serializer))</span><br><span class=\"line\">                .entryTtl(Duration.ofMinutes(30)); // 设置缓存过期时间</span><br><span class=\"line\"></span><br><span class=\"line\">        return RedisCacheManager.builder(factory)</span><br><span class=\"line\">                .cacheDefaults(config)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>到此配置全部完毕</strong></p>\n<h2 id=\"4-Spring-Cache-注解详解与使用示例\"><a href=\"#4-Spring-Cache-注解详解与使用示例\" class=\"headerlink\" title=\"4 Spring Cache 注解详解与使用示例\"></a>4 Spring Cache 注解详解与使用示例</h2><h3 id=\"4-1-Cacheable\"><a href=\"#4-1-Cacheable\" class=\"headerlink\" title=\"4.1 @Cacheable\"></a>4.1 @Cacheable</h3><p><strong>用途</strong>：标记方法返回值需被缓存。若缓存存在，则直接返回；否则执行方法体并缓存结果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Cacheable(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\">FileEntity <span class=\"title function_\">getFileById</span><span class=\"params\">(UUID id)</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-CachePut\"><a href=\"#4-2-CachePut\" class=\"headerlink\" title=\"4.2 @CachePut\"></a>4.2 @CachePut</h3><p><strong>用途</strong>：更新缓存，总是执行方法并将结果写入缓存。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CachePut(value = &quot;fileCache&quot;, key = &quot;#result.id&quot;)</span></span><br><span class=\"line\">FileEntity <span class=\"title function_\">saveFile</span><span class=\"params\">(FileEntity file)</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-CacheEvict\"><a href=\"#4-3-CacheEvict\" class=\"headerlink\" title=\"4.3 @CacheEvict\"></a>4.3 @CacheEvict</h3><p><strong>用途</strong>：清除缓存中的条目。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheEvict(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">deleteFile</span><span class=\"params\">(UUID id)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>清空整个缓存区域：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheEvict(value = &quot;fileListCache&quot;, allEntries = true)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">clearAllFiles</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-CacheConfig\"><a href=\"#4-4-CacheConfig\" class=\"headerlink\" title=\"4.4 @CacheConfig\"></a>4.4 @CacheConfig</h3><p><strong>用途</strong>：类级别共享缓存配置</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheConfig(cacheNames = &quot;fileCache&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Cacheable(key = &quot;#id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> FileEntity <span class=\"title function_\">getFileById</span><span class=\"params\">(UUID id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileMapper.selectById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-5-业务层使用示例\"><a href=\"#4-5-业务层使用示例\" class=\"headerlink\" title=\"4.5 业务层使用示例\"></a>4.5 业务层使用示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> FileRepository fileRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Cacheable(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> FileEntity <span class=\"title function_\">getFileById</span><span class=\"params\">(UUID id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileRepository.selectById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@CachePut(value = &quot;fileCache&quot;, key = &quot;#result.id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> FileEntity <span class=\"title function_\">saveFile</span><span class=\"params\">(FileEntity file)</span> &#123;</span><br><span class=\"line\">        fileRepository.insert(file);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> file;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@CacheEvict(value = &quot;fileCache&quot;, key = &quot;#id&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">deleteFile</span><span class=\"params\">(UUID id)</span> &#123;</span><br><span class=\"line\">        fileRepository.deleteById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Cacheable(value = &quot;fileListCache&quot;, key = &quot;&#x27;all&#x27;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;FileEntity&gt; <span class=\"title function_\">getAllFiles</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileRepository.selectAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"Java后端","path":"api/categories/Java后端.json"}],"tags":[{"name":"踩坑日记","path":"api/tags/踩坑日记.json"}]}